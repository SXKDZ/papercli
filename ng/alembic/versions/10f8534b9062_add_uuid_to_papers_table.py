"""add uuid to papers table

Revision ID: 10f8534b9062
Revises: 03b4cd44700f
Create Date: 2025-10-08 00:50:44.338536

"""

import uuid
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "10f8534b9062"
down_revision: Union[str, Sequence[str], None] = "03b4cd44700f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Step 1: Add uuid column as nullable (do NOT populate it here)
    # UUIDs will be populated during sync to ensure consistency between databases
    op.add_column("papers", sa.Column("uuid", sa.String(length=36), nullable=True))

    # Step 2: Add unique index (nullable UUIDs are allowed temporarily)
    op.create_index(op.f("ix_papers_uuid"), "papers", ["uuid"], unique=True)

    # Note: UUIDs remain NULL after migration. The sync service will:
    # 1. Match papers by title between local and remote
    # 2. Generate UUIDs for papers that don't have them
    # 3. Copy UUIDs to ensure both sides have the same UUID for the same paper


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_papers_uuid"), table_name="papers")
    op.drop_column("papers", "uuid")
    # ### end Alembic commands ###
